## Question1
# Use python lists and make an list of numbers.

my_list = [1, 2, 3, 4, 5]

# Write a function which returns sum of the list of numbers

total = 0
 
# creating a list
my_list1 = [10, 50, 10, 10, 20] 
 
# Iterate each element in list
# and add them in variale total
for num in range(0, len(my_list1)):
    total += my_list1[num]
 
# printing total value
print("Sum of all elements in my_list1: ", total)

## Question2 

my_Dict = {'Rishik': 55, 'Wick': 27, 'Rio' : 10 , 'Mac' : 14, 'Rastogi' : 51 }
max_val = max(my_Dict.items(), key=lambda x : x[1])
print('Max value in Dict: ', max_val[1])
print('Key With Max value in Dict: ', max_val[0])

## Question 3

def max_len(arr, n): 
  
    # intitialize count 
    count = 0 
      
    # initialize max 
    result = 0 
  
    for i in range(0, n): 
      
        # Reset count when 0 is found 
        if (arr[i] == 0): 
            count = 0
  
        # If 1 is found, increment count 
        # and update result if count  
        # becomes more. 
        else: 
              
            # increase count 
            count+= 1 
            result = max(result, count)  
          
    return result  
  
arr = [0,0,0,1,1,1,0,0,0,1,1,0,1,1,1,1,0,0,1,1]
  
n = len(arr)  
  
print(max_len(arr, n)) 


## Question 4

CREATE TABLE ‘schemaname’.’tablename’(
  column_1 datatype (length) NOT NULL | DEFAULT | UNIQUE, 
  ...,
  Primary key, 
Foreign key 
) ENGINE=storage_engine;
CREATE TABLE `employees`.`tblemployee` (
  `Employee_ID` INT NOT NULL AUTO_INCREMENT,
  `Employee_Name` VARCHAR(45) NOT NULL,
  `Employee_Department_ID` INT NOT NULL,
  `Employee_Grade_ID` INT NOT NULL DEFAULT A,
  `Employee_Salary` INT NOT NULL,
  PRIMARY KEY (`Employee_ID`),
  INDEX `FK_Department_ID_idx` (`Employee_Department_ID` ASC) VISIBLE,
  CONSTRAINT `FK_Department_ID`
    FOREIGN KEY (`Employee_Department_ID`)
    REFERENCES ` employees`.`department` (`Department_ID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE);












